---
# Tasks if setting up mofed from rpm repository
  - name: Install RHEL-Ofed
    block:
    - name: Add needed dnf repository for mofed and lustre
      ansible.builtin.yum_repository:
        name: "{{mofed_repo.name}}"
        description: "{{mofed_repo.description}}"
        baseurl: "{{mofed_repo.baseurl}}"
        gpgcheck: "{{mofed_repo.gpgcheck}}"

    - name: Install various packages
      ansible.builtin.dnf:
        name: "{{ item }}"
        state: present
      loop: "{{ mofed_packages }}"
      register: mofed_packages_updated

    - name: Restart openibd service
      command: "/etc/init.d/openibd restart"
      when: mofed_packages_updated.changed and openibd_restart|bool

    - name: Add ib to boot initrd
      command: "dracut -f"
      when: mofed_packages_updated.changed

    when: mofed | default(false)|bool

# Tasks if using RHEL provided mofed
  - name: Install various packages
    ansible.builtin.dnf:
      name: "{{ item }}"
      state: present
    loop: "{{ rdma_packages }}"
    when: not mofed | default(true)|bool

# these are common tasks after proper version of ofed packages has been installed
  - name: "Comment out not needed RDMA modules"
    replace:
      path: "{{ rdma_config }}"
      regexp: "^{{ item }}"
      replace: "# {{ item }}"
    loop: "{{ rdma_disable_kmod }}"

  - name: Make sure opensm is installed if managed by ansible
    package:
      name: opensm
      state: present
    when: rdma_manage_opensm|bool

  - name: Generate the OpenSM partition configuration file
    template:
      src: partitions.conf.j2
      dest: /etc/rdma/partitions.conf
      owner: root
      mode: 0644
    when: rdma_manage_opensm|bool
    notify: restart opensm

  - name: Set cgoup limits for all users
    ansible.builtin.lineinfile:
      path: /etc/rdma/opensm.conf
      regexp: "^{{ item.key }}"
      line: "{{ item.key }} {{ item.value }}"
    loop: "{{ rdma_opensm_conf | dict2items }}"
    when: rdma_manage_opensm|bool
    notify: restart opensm


  - name: Manage the opensm service
    service:
      name: opensm
      state: "{{ rdma_opensm_state }}"
      enabled: "{{ rdma_opensm_enabled }}"
    when:
      - rdma_manage_opensm|bool
